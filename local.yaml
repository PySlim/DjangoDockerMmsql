version: "3.8"

volumes:
  local_sql_data: {}
  local_sql_data_backups: {}

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-CU3-ubuntu-18.04
    container_name: sqlserver
    user: '0:0'
    ports:
      - 1433:1433
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "PasswordO1."
      MSSQL_PID: Standard
    volumes:
      - local_sql_data:/var/opt/mssql/data:Z
      - local_sql_data_backups:/backups:z

  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: sidgro_local_django
    container_name: sidgro_django
    depends_on:
      - sqlserver
    volumes:
        - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.sqlserver
    ports:
        - "8000:8000"
    command: /start
  


  redis:
    image: redis:5.0
    container_name: sidgro_redis

  celeryworker:
    <<: *django
    image: sidgro_local_celeryworker
    container_name: sidgro_celeryworker
    depends_on:
      - redis
      - sqlserver
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: sidgro_local_celerybeat
    container_name: sidgro_celerybeat
    depends_on:
      - redis
      - sqlserver
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: sidgro_local_flower
    container_name: sidgro_flower
    ports:
      - "6666:5555"
    command: /start-flower